ORGANIZATION_BLOCK 主程序:OB1
TITLE=程序注释: 北京东方圣隆达科贸有限公司-管式反应器
// 
// PLC作为Modbus主站，连接11块west仪表。
// 
// 
BEGIN
Network 1 
// 第一扫秒周期, 复位各标志位和起始位,初始化
LD     SM0.1
R      M2.0, 8
R      M4.0, 8
R      M0.0, 8
CALL   SBR4                        // 初始化变量表
CALL   SBR7                        // 初始化设备状态
CALL   SBR9                        // 初始化高速计数器
CALL   SBR5
MOVW   20, VW1036
Network 2 
// 设定手动自动指示灯
LD     I1.1
=      Q0.1
Network 3 
// 设定加热总开关指示灯
LD     I0.4
=      Q0.2
Network 4 
// 下面根据仪表报警输出设定仪表警报指示灯，上段报警
LD     I0.6
LD     I1.3
NOT
A      Q0.5
OLD
=      Q0.5
Network 5 
// 中段报警
LD     I0.7
LD     I1.3
NOT
A      Q0.6
OLD
=      Q0.6
Network 6 
// 下段报警
LD     I1.0
LD     I1.3
NOT
A      Q0.7
OLD
=      Q0.7
Network 7 
// 反应釜温度报警
LD     I1.4
LD     I1.3
NOT
A      Q1.0
OLD
=      Q1.0
Network 8 
// 预热管温度报警
LD     I1.5
LD     I1.3
NOT
A      Q1.1
OLD
=      Q1.1
Network 9 
// 除分离温度报警
LD     I2.0
LD     I1.3
NOT
A      Q2.0
OLD
=      Q2.0
Network 10 
// 上压力报警
LD     I2.1
LD     I1.3
NOT
A      Q2.1
OLD
=      Q2.1
Network 11 
// 下压力报警
LD     I2.2
LD     I1.3
NOT
A      Q2.2
OLD
=      Q2.2
Network 12 
// 根据表的报警情况设定报警总指示灯
LD     I0.6
O      I0.7
O      I1.0
O      I1.4
O      I1.5
O      I2.0
O      I2.1
O      I2.2
O      I2.3
LD     I1.3
NOT
A      M0.2
OLD
=      M0.2
=      Q2.3
Network 13 
// 设定加热开关：加热=(手动 or 组态加热总开关)  and 面板加热总开关 and 无报警
LD     I1.1
O      V3260.0
A      I1.2
AN     M0.2
=      Q0.0
=      Q0.3
=      Q0.4
Network 14 
// Modbus 主站初始化完成后, 启动读写指令
// M0.5=1表示MBUS_CTRL初始化完成
// M0.5的每个上升沿表示开始一次读写操作完成
// M0.5等于1时，表示正在读写过程中
LD     M0.0
EU
S      M0.5, 1
Network 15 // 网络标题
// 
// 网络注释     初始化Modbus 主站通信,
// 
// EN          使能：必须保证每一扫描周期都被使能（使用SM0.0)
// 
// Mode      模式：常为1，使能 Modbus 协议功能；为0 时恢复为系统 PPI 协议
// 
// Baud       波特率：设为9600，要与从站波特率对应
// 
// Parity       校验：校验方式选择 0＝无校验 
// 
// Timeout    超时：主站等待从站响应的时间，以毫秒为单位，典型的设置值为1000毫秒（1秒），
//                             允许设置的范围为 1－32767。
//                 注意： 这个值必须设置足够大以保证从站有时间响应。
// 
// Done      完成位：初始化完成，此位会自动置1。可以用该位启动 MBUS_MSG 读写操作
// 
// Error       初始化错误代码（只有在 Done 位为1时有效）：0＝ 无错误
//                                                                                                                1＝ 校验选择非法
//                                                                                                                2＝ 波特率选择非法
//                                                                                                                3＝ 模式选择非法
// 
LD     SM0.0
=      L60.0
LD     SM0.0
=      L63.7
LD     L60.0
CALL   SBR1, L63.7, 9600, 0, 1000, M0.0, MB1
Network 16 
// 
// 读取从站保持寄存器的数据
// 
// EN             使能：同一时刻只能有一个读写功能（即 MBUS_MSG）使能
//                   注意：建议每一个读写功能（即 MBUS_MSG）都用上一个 MBUS_MSG 指令的 Done 完成位来激
//                               活，以保证所有读写指令循环进行（见程序）。 
// 
// First           读写请求位：每一个新的读写请求必须使用脉冲触发 
// 
// Slave         从站地址：可选择的范围 1－247
// 
// RW           读写操作：0＝读， 1＝写
//                  注意：1. 开关量输出和保持寄存器支持读和写功能
//                              2. 开关量输入和模拟量输入只支持读功能
// 
// Addr          读写从站的数据地址：选择读写的数据类型 00001至0xxxx－开关量输出
//                                                                                               10001至1xxxx－开关量输入
//                                                                                               30001至3xxxx－模拟量输入
//                                                                                               40001至4xxxx－保持寄存器
// 
// Count       通讯的数据个数（位或字的个数）
//                  注意： Modbus主站可读/写的最大数据量为120个字（是指每一个 MBUS_MSG 指令）
// 
// DataPtr     数据指针：1. 如果是读指令，读回的数据放到这个数据区中
//                                   2. 如果是写指令，要写出的数据放到这个数据区中
// 
// Done        读写功能完成位
// 
// Error         错误代码 只有在 Done 位为1时，错误代码才有效
// 错误代码： 0＝无错误
//                      1＝响应校验错误
//                      2＝未用
//                      3＝接收超时（从站无响应）
//                      4＝请求参数错误（slave address,Modbus address,count,RW）
//                      5＝Modbus/自由口未使能 
//                      6＝Modbus正在忙于其它请求
//                      7＝响应错误（响应不是请求的操作）
//                      8＝响应CRC校验和错误
// 
//                  101＝ 从站不支持请求的功能
//                  102＝ 从站不支持数据地址
//                  103＝ 从站不支持此种数据类型
//                  104＝ 从站设备故障
//                  105＝ 从站接受了信息，但是响应被延迟
//                  106＝ 从站忙，拒绝了该信息
//                  107＝ 从站拒绝了信息
//                  108＝ 从站存储器奇偶错误
// 
// 
// 
// 常见的错误及其错误代码：
// 
// 1. 如果多个 MBUS_MSG 指令同时使能会造成6号错误
// 
// 2. 从站 delay 参数设的时间过长会造成3号错误
// 
// 3. 从站掉电或不运行，网络故障都会造成3号错误
// 
Network 17 
// 选择变量
LD     SM0.0
A      M0.5
EU
CALL   SBR6, VW1500
Network 18 
// 选择变量，
// 	3 变量需要写入
// 	2 变量需要尝试读取
// 	1 变量需要读取
// 	0 获取变量信息失败
LD     SM0.0
A      M0.0
A      M0.5
LPS
AW=    VW1500, 0
JMP    100
LRD
LDW=   VW1500, 1
OW=    VW1500, 2
ALD
MOVB   0, VB1024
AENO
JMP    110
LPP
LPS
AW=    VW1500, 3
MOVB   1, VB1024
AENO
JMP    120
LPP
JMP    100
Network 19 
// 有变量需要读
LBL    110
Network 20 
// 有变量需要写
LBL    120
Network 21 
// 读写从站数据
LD     M0.5
=      L60.0
LD     M0.5
EU
=      L63.7
LD     L60.0
CALL   SBR2, L63.7, VB1980, VB1024, VD1981, VW1985, VD1987, M2.2, MB4
Network 22 
// M0.5等于0时,通讯处于空闲状态，延时一段时间后，设置M0.5为1，开始下一次通讯
LD     SM0.0
A      M0.0
AN     M0.5
TON    T33, VW1036
Network 23 
// 延时时间到，设置M0.5为1，复位定时器
LD     SM0.0
A      M0.0
AN     M0.5
A      T33
S      M0.5, 1
MOVW   0, T33
Network 24 
// if(读取完成)
// {
// 	处理数据
// }
// 
// MB4=3：通讯超时，设置设备状态为0，即通讯断开；更新与该设备有关的所有变量（每个变量都有一个设备状态信息）
LD     M2.2
LPS
AB=    MB4, 3
CALL   SBR0, 0, VD1000
CALL   SBR8, 0, 0, VB1980
LPP
AB<>   MB4, 3
CALL   SBR0, 1, VD1000
Network 25 
// 如果读取完成，则设置空闲标志, 清除完成状态
// M0.5等于0后，进入延时程序，延时时间到之后，设置M0.5等于1，再次开始下一次读写擦欧洲哦
LD     M2.2
R      M0.5, 1
R      M2.2, 1
Network 26 
LD     SM0.0
JMP    255
Network 27 
// 没有变量需要读取，设置空闲标志
LBL    100
Network 28 
LD     SM0.0
R      M0.5, 1
Network 29 
LBL    255
Network 30 
// 高速计数器1，每秒计算一次，获取当前计数值，并清0
// 湿式气体流量计
LD     SM0.5
EU
LPS
MOVD   HC4, VD1028
MOVB   16#C0, SMB147
MOVD   0, SMD148
HSC    4
MOVD   VD1028, VD3220
AD=    VD3240, 0
+D     VD1028, VD3230
LPP
AD<>   VD3240, 0
MOVD   0, VD3230
MOVD   0, VD3240
Network 31 
// 高速计数器0，每秒计算一次，获取当前计数值，并清0
LD     SM0.5
EU
MOVD   HC0, VD1032
MOVB   16#C0, SMB37
MOVD   0, SMD38
HSC    0
MOVD   VD1032, VD3250
Network 32 // 七星华创累计和清零
LD     SM0.5
EU
LPS
AW>=   VW3000, 0
ITD    VW3000, VD3272
LRD
AW<    VW3000, 0
ITD    0, VD3272
LRD
AD=    VD3268, 0
+D     VD3272, VD3264
LPP
AD<>   VD3268, 0
MOVD   0, VD3264
MOVD   0, VD3268
Network 33 
// 设备通讯失败报警
LDN    SM0.0
A      SM0.0
LPS
AD=    VD1976, 0
R      Q2.3, 1
LPP
AD<>   VD1976, 0
S      Q2.3, 1
END_ORGANIZATION_BLOCK
SUBROUTINE_BLOCK SET_DEV_STATE:SBR0
TITLE=设置设备状态，更新设备通讯时间记录，复制数据到map
VAR_INPUT
state:WORD;
tag_index:DWORD;
END_VAR
VAR
startaddr:DWORD;
sn_ptr:DWORD;
saveac0:DWORD;
saveac1:DWORD;
saveac2:DWORD;
saveac3:DWORD;
last_timestamp_ptr:DWORD;
count_ptr:DWORD;
count:WORD;
src:DWORD;
map:DWORD;
END_VAR
BEGIN
Network 1 // 网络标题
// 保存AC寄存器
LD     SM0.0
MOVD   AC0, LD14
MOVD   AC1, LD18
MOVD   AC2, LD22
MOVD   AC3, LD26
Network 2 
// 变量信息的首地址
LD     SM0.0
MOVD   LD2, AC0
*D     +20, AC0
MOVD   VD1004, LD6
+D     AC0, LD6
Network 3 
// 获取设备序号
LD     SM0.0
MOVD   LD6, LD10
+D     +11, LD10
MOVD   1, AC1
SLD    AC1, *LD10
Network 4 
// 设备状态异常，置位
LD     SM0.0
AW=    LW0, 0
ORD    AC1, *VD1016
Network 5 
// 设备状态正常，清零
LD     SM0.0
AW<>   LW0, 0
INVD   AC1
ANDD   AC1, *VD1016
Network 6 
LD     SM0.0
AW<>   LW0, 0
MOVD   LD6, AC2
+D     +12, AC2
ORB    1, *AC2
Network 7 
// 更新读取时间
LD     SM0.0
MOVD   0, AC0
MOVB   *LD10, AC0
*D     +4, AC0
MOVD   VD1020, LD30
+D     AC0, LD30
BITIM  *LD30
Network 8 
// 获取变量的寄存器个数
LD     SM0.0
MOVD   LD6, AC1
+D     +5, AC1
MOVW   *AC1, LW38
Network 9 
// 获取数据存储地址
LD     SM0.0
MOVD   LD6, AC2
+D     +7, AC2
MOVD   *AC2, LD40
MOVD   0, AC0
MOVW   *AC1, AC0
MOVD   LD40, AC1
+D     AC0, AC1
MOVD   AC0, LD44
+D     AC1, LD44
Network 10 
// 复制读取的数据到map
LD     SM0.0
BMW    *LD40, *LD44, AC0
Network 11 
// 恢复AC寄存器
LD     SM0.0
MOVD   LD14, AC0
MOVD   LD18, AC1
MOVD   LD22, AC2
MOVD   LD26, AC3
END_SUBROUTINE_BLOCK
SUBROUTINE_BLOCK MBUS_CTRL:SBR1
TITLE=本代码归西门子能源与自动化公司专有，它属于附加软件包“Modbus 主站端口 0 库”的一部分。
VAR_INPUT
Mode:BOOL;	// 1 = Modbus, 0 = PPI（终止 Modbus）

Baud:DWORD;	//  1200, 2400 ... 115200
Parity:BYTE;	// 0 = 无，1 = 奇校验，2 = 偶校验
Timeout:INT;	// 以毫秒表示的从站响应超时

END_VAR
VAR_OUTPUT
Done:BOOL;	// 完成标记（始终设置）

Error:BYTE;	// 错误状态

END_VAR
VAR
AC0save:DWORD;
AC1save:DWORD;
AC2save:DWORD;
AC3save:DWORD;
END_VAR
BEGIN
Network 1 // 此 POU 受密码保护，不能编辑和查看。

END_SUBROUTINE_BLOCK
SUBROUTINE_BLOCK MBUS_MSG:SBR2
TITLE=本代码归西门子能源与自动化公司专有，它属于附加软件包“Modbus 主站端口 0 库”的一部分。
VAR_INPUT
First:BOOL;	// 新消息（设置为 1 时仅对新请求扫描一次）
Slave:BYTE;	// 从站地址（0 到 247）
RW:BYTE;	// 读 = 0，写 = 1
Addr:DWORD;	// Modbus 地址（即 40001）
Count:INT;	// 元素个数（1 到 120 个字或 1 到 1920 位）
DataPtr:DWORD;	// 数据指针（即 &VB100）

END_VAR
VAR_OUTPUT
Done:BOOL;	// 完成标记（0 = 忙，1 = 完成）
Error:BYTE;	// 错误（0 = 无错误）
END_VAR
VAR
AC0save:DWORD;
AC1save:DWORD;
AC2save:DWORD;
END_VAR
BEGIN
Network 1 // 此 POU 受密码保护，不能编辑和查看。

END_SUBROUTINE_BLOCK
SUBROUTINE_BLOCK MBUSM1:SBR3
TITLE=本代码归西门子能源与自动化公司专有，它属于附加软件包“Modbus 主站端口 0 库”的一部分。
VAR_OUTPUT
crc:WORD;
END_VAR
VAR
count:INT;
ptr:DWORD;
END_VAR
BEGIN
Network 1 // 此 POU 受密码保护，不能编辑和查看。

END_SUBROUTINE_BLOCK
SUBROUTINE_BLOCK INIT_TAG_TABLE:SBR4
TITLE=初始化需要读取的变量列表
// 
// 
// struct
// 	stationnum	BYTE
// 	addr		DWORD
// 	count		INT
// 	dataprt		DWORD(pointer)
// 	sn		BYTE 站顺序号：从0开始。当stationnum通讯异常时，设备状态信息的第sn位置1.
// 	bit_info		BYTE: bit0-读取之后，设置为1，bit1-只读标志
// 	byte0-byte7	reserved
// sizeof(struct) =20 bytes
// 
// 设备信息
// 	VDxxxx		最多保存32个设备状态的信息
// 		
// 	
// 站地址	过程值地址	设定值地址	设备名称
// 1	VW3000		VW3010		WEST（气体质量流量计）
// 2	VW3020		VW3030		WEST（变频器）
// 3	VW3040		VW3050		WEST表（预热釜温度）
// 4	VW3060		VW3070		WEST表（伴热带温度）
// 5	VW3080		VW3090		WEST表（管式反应器3段加热）-1
// 6	VW3100		VW3110		WEST表（管式反应器3段加热）-2
// 7	VW3120		VW3130		WEST表（管式反应器3段加热）-3
// 8	VW3140		VW3150		WEST表（管式反应器内部温度）
// 9	VW3160		VW3170		WEST（气液分离器温度伴热）
// 10	VW3180		VW3190		WEST（压力传感器）-1
// 11	VW3200		VW3210		WEST（压力传感器）-2
// 
// West表地址=1,PV变量地址=VW3000, SV变量地址=VW3010
// PV定义信息: 2000,2001,2005,2007,2011
// SV定义信息: 2020,2021,2025,2027,2031
// West表地址=2,PV变量地址=VW3020, SV变量地址=VW3030
// PV定义信息: 2040,2041,2045,2047,2051
// SV定义信息: 2060,2061,2065,2067,2071
// West表地址=3,PV变量地址=VW3040, SV变量地址=VW3050
// PV定义信息: 2080,2081,2085,2087,2091
// SV定义信息: 2100,2101,2105,2107,2111
// West表地址=4,PV变量地址=VW3060, SV变量地址=VW3070
// PV定义信息: 2120,2121,2125,2127,2131
// SV定义信息: 2140,2141,2145,2147,2151
// West表地址=5,PV变量地址=VW3080, SV变量地址=VW3090
// PV定义信息: 2160,2161,2165,2167,2171
// SV定义信息: 2180,2181,2185,2187,2191
// West表地址=6,PV变量地址=VW3100, SV变量地址=VW3110
// PV定义信息: 2200,2201,2205,2207,2211
// SV定义信息: 2220,2221,2225,2227,2231
// West表地址=7,PV变量地址=VW3120, SV变量地址=VW3130
// PV定义信息: 2240,2241,2245,2247,2251
// SV定义信息: 2260,2261,2265,2267,2271
// West表地址=8,PV变量地址=VW3140, SV变量地址=VW3150
// PV定义信息: 2280,2281,2285,2287,2291
// SV定义信息: 2300,2301,2305,2307,2311
// West表地址=9,PV变量地址=VW3160, SV变量地址=VW3170
// PV定义信息: 2320,2321,2325,2327,2331
// SV定义信息: 2340,2341,2345,2347,2351
// West表地址=10,PV变量地址=VW3180, SV变量地址=VW3190
// PV定义信息: 2360,2361,2365,2367,2371
// SV定义信息: 2380,2381,2385,2387,2391
// West表地址=11,PV变量地址=VW3200, SV变量地址=VW3210
// PV定义信息: 2400,2401,2405,2407,2411
// SV定义信息: 2420,2421,2425,2427,2431
// 
BEGIN
Network 1 
LD     SM0.0
MOVD   &VB1980, VD1012
MOVD   &VB2000, VD1004
MOVD   &VB1976, VD1016
MOVD   &VB1600, VD1020
Network 2 // 网络标题
// 1	VW3000		VW3010		WEST（气体质量流量计）
// West表地址=1,PV变量地址=VW3000, SV变量地址=VW3010
// PV定义信息: 2000,2001,2005,2007,2011
// SV定义信息: 2020,2021,2025,2027,2031
LD     SM0.0
MOVB   1, VB2000
MOVD   44097, VD2001
MOVW   1, VW2005
MOVD   &VB3000, VD2007
MOVB   0, VB2011
MOVB   1, VB2020
MOVD   44098, VD2021
MOVW   1, VW2025
MOVD   &VB3010, VD2027
MOVB   0, VB2031
Network 3 // 网络标题
// 2	VW3020		VW3030		WEST（变频器）
// West表地址=2,PV变量地址=VW3020, SV变量地址=VW3030
// PV定义信息: 2040,2041,2045,2047,2051
// SV定义信息: 2060,2061,2065,2067,2071
LD     SM0.0
MOVB   2, VB2040
MOVD   44097, VD2041
MOVW   1, VW2045
MOVD   &VB3020, VD2047
MOVB   1, VB2051
MOVB   2, VB2060
MOVD   44098, VD2061
MOVW   1, VW2065
MOVD   &VB3030, VD2067
MOVB   1, VB2071
Network 4 // 网络标题
// 3	VW3040		VW3050		WEST表（预热釜温度）
// West表地址=3,PV变量地址=VW3040, SV变量地址=VW3050
// PV定义信息: 2080,2081,2085,2087,2091
// SV定义信息: 2100,2101,2105,2107,2111
LD     SM0.0
MOVB   3, VB2080
MOVD   44097, VD2081
MOVW   1, VW2085
MOVD   &VB3040, VD2087
MOVB   2, VB2091
MOVB   3, VB2100
MOVD   44098, VD2101
MOVW   1, VW2105
MOVD   &VB3050, VD2107
MOVB   2, VB2111
Network 5 // 网络标题
// 4	VW3060		VW3070		WEST表（伴热带温度）
// West表地址=4,PV变量地址=VW3060, SV变量地址=VW3070
// PV定义信息: 2120,2121,2125,2127,2131
// SV定义信息: 2140,2141,2145,2147,2151
LD     SM0.0
MOVB   4, VB2120
MOVD   44097, VD2121
MOVW   1, VW2125
MOVD   &VB3060, VD2127
MOVB   3, VB2131
MOVB   4, VB2140
MOVD   44098, VD2141
MOVW   1, VW2145
MOVD   &VB3070, VD2147
MOVB   3, VB2151
Network 6 // 网络标题
// 5	VW3080		VW3090		WEST表（管式反应器3段加热）
// West表地址=5,PV变量地址=VW3080, SV变量地址=VW3090
// PV定义信息: 2160,2161,2165,2167,2171
// SV定义信息: 2180,2181,2185,2187,2191
LD     SM0.0
MOVB   5, VB2160
MOVD   44097, VD2161
MOVW   1, VW2165
MOVD   &VB3080, VD2167
MOVB   4, VB2171
MOVB   5, VB2180
MOVD   44098, VD2181
MOVW   1, VW2185
MOVD   &VB3090, VD2187
MOVB   4, VB2191
Network 7 // 网络标题
// 6	VW3100		VW3110		WEST表（管式反应器3段加热）
// West表地址=6,PV变量地址=VW3100, SV变量地址=VW3110
// PV定义信息: 2200,2201,2205,2207,2211
// SV定义信息: 2220,2221,2225,2227,2231
LD     SM0.0
MOVB   6, VB2200
MOVD   44097, VD2201
MOVW   1, VW2205
MOVD   &VB3100, VD2207
MOVB   5, VB2211
MOVB   6, VB2220
MOVD   44098, VD2221
MOVW   1, VW2225
MOVD   &VB3110, VD2227
MOVB   5, VB2231
Network 8 // 网络标题
// 7	VW3120		VW3130		WEST表（管式反应器3段加热）
// West表地址=7,PV变量地址=VW3120, SV变量地址=VW3130
// PV定义信息: 2240,2241,2245,2247,2251
// SV定义信息: 2260,2261,2265,2267,2271
LD     SM0.0
MOVB   7, VB2240
MOVD   44097, VD2241
MOVW   1, VW2245
MOVD   &VB3120, VD2247
MOVB   6, VB2251
MOVB   7, VB2260
MOVD   44098, VD2261
MOVW   1, VW2265
MOVD   &VB3130, VD2267
MOVB   6, VB2271
Network 9 // 网络标题
// 8	VW3140		VW3150		WEST表（管式反应器内部温度）
// West表地址=8,PV变量地址=VW3140, SV变量地址=VW3150
// PV定义信息: 2280,2281,2285,2287,2291
// SV定义信息: 2300,2301,2305,2307,2311
LD     SM0.0
MOVB   8, VB2280
MOVD   44097, VD2281
MOVW   1, VW2285
MOVD   &VB3140, VD2287
MOVB   7, VB2291
MOVB   8, VB2300
MOVD   44098, VD2301
MOVW   1, VW2305
MOVD   &VB3150, VD2307
MOVB   7, VB2311
Network 10 // 网络标题
// 9	VW3160		VW3170		WEST（气液分离器温度伴热）
// West表地址=9,PV变量地址=VW3160, SV变量地址=VW3170
// PV定义信息: 2320,2321,2325,2327,2331
// SV定义信息: 2340,2341,2345,2347,2351
LD     SM0.0
MOVB   9, VB2320
MOVD   44097, VD2321
MOVW   1, VW2325
MOVD   &VB3160, VD2327
MOVB   8, VB2331
MOVB   9, VB2340
MOVD   44098, VD2341
MOVW   1, VW2345
MOVD   &VB3170, VD2347
MOVB   8, VB2351
Network 11 // 网络标题
// 10	VW3180		VW3190		WEST（压力传感器）
// West表地址=10,PV变量地址=VW3180, SV变量地址=VW3190
// PV定义信息: 2360,2361,2365,2367,2371
// SV定义信息: 2380,2381,2385,2387,2391
LD     SM0.0
MOVB   10, VB2360
MOVD   44097, VD2361
MOVW   1, VW2365
MOVD   &VB3180, VD2367
MOVB   9, VB2371
MOVB   10, VB2380
MOVD   44098, VD2381
MOVW   1, VW2385
MOVD   &VB3190, VD2387
MOVB   9, VB2391
Network 12 // 网络标题
// 11	VW3200		VW3210		WEST（压力传感器）
// West表地址=11,PV变量地址=VW3200, SV变量地址=VW3210
// PV定义信息: 2400,2401,2405,2407,2411
// SV定义信息: 2420,2421,2425,2427,2431
LD     SM0.0
MOVB   11, VB2400
MOVD   44097, VD2401
MOVW   1, VW2405
MOVD   &VB3200, VD2407
MOVB   10, VB2411
MOVB   11, VB2420
MOVD   44098, VD2421
MOVW   1, VW2425
MOVD   &VB3210, VD2427
MOVB   10, VB2431
END_SUBROUTINE_BLOCK
SUBROUTINE_BLOCK HSC_INIT3:SBR5
TITLE=
BEGIN
Network 1 // HSC 指令向导
// 要在程序中使用此配置，请在主程序块中使用 SM0.1 或一条沿触发指令调用一次此子程序。
// 配置 HC3 为模式 0；CV = 0； PV = 0；增计数；
// 开放中断和启动计数器。
// 
LD     SM0.0
MOVB   16#F8, SMB147               //设置控制位：增计数；已使能；
MOVD   +0, SMD148                  //装载 CV
MOVD   +0, SMD152                  //装载 PV
HDEF   4, 0
ENI
HSC    4
END_SUBROUTINE_BLOCK
SUBROUTINE_BLOCK SELECT_TAG:SBR6
TITLE=功能：从变量列表中选择变量进行读/写操作。
// 
// 过程：	按变量个数循环，对于每个变量，都执行下列步骤
// 	
// 	1. 调整游标，指向下一个变量（最大则翻转）
// 	2. 判断变量所属的设备状态，设备正常转步骤3，设备不正常转步骤4
// 	3. 判断变量是否需要写，需要写，则设置返回值为3，转步骤5，不需要写，则设置返回值为1转步骤5
// 	4. 判断设备通讯间隔是否大于5秒，是设置返回值2，转步骤5，否则转步骤1.
// 	5. 完成，跳出循环
// 	
// 返回值：
// 	3 变量需要写入
// 	2 变量需要尝试读取
// 	1 变量需要读取
// 	0 获取变量信息失败
VAR_OUTPUT
num:WORD;
END_VAR
VAR
saveac0:DWORD;
saveac1:DWORD;
saveac2:DWORD;
saveac3:DWORD;
startaddr:DWORD;	// 变量信息的首地址
sn_ptr:DWORD;	// 变量对应的设备的顺序号的地址
last_timestamp_ptr:DWORD;
time_gone:DWORD;
i:WORD;
dev_state:DWORD;
j:WORD;
count_ptr:DWORD;
count:WORD;
src:DWORD;
map:DWORD;
bitinfo:DWORD;
END_VAR
BEGIN
Network 1 // 网络标题
// 保存AC寄存器
LD     SM0.0
MOVD   AC0, LD2
MOVD   AC1, LD6
MOVD   AC2, LD10
MOVD   AC3, LD14
Network 2 
// 初始化返回值
LD     SM0.0
MOVW   0, LW0
Network 3 
// 循环开始（按变量个数循环）
LD     SM0.0
FOR    LW34, 1, 22
Network 4 
// 调整读取变量的索引
// {
// 	pos = pos +1;
// 	if(pos >= max_tag_num)
// 	{
// 		pos =0;
// 	}
// }
// 
LD     SM0.0
INCD   VD1000
AD>=   VD1000, 22
MOVD   0, VD1000
Network 5 
// 跳过本次未使用的表地址
LD     SM0.0
LDD=   VD1000, 2
OD=    VD1000, 3
OD=    VD1000, 4
OD=    VD1000, 5
ALD
JMP    212
Network 6 
// 获取变量信息的首地址
LD     SM0.0
MOVD   VD1000, AC0
*D     +20, AC0
MOVD   VD1004, LD18
+D     AC0, LD18
Network 7 
// 判断设备状态
// 	设备状态正常，则读取数据
LD     SM0.0
MOVD   LD18, LD22
+D     +11, LD22
MOVD   1, AC1
SLD    AC1, *LD22
ANDD   *VD1016, AC1
Network 8 
// 设备通讯状态正常，跳出循环
LD     SM0.0
AD=    AC1, 0
JMP    200
Network 9 
// 当设备通讯不正常时，检查上次读取时间
// 	
LD     SM0.0
MOVD   0, AC0
MOVB   *LD22, AC0
*D     +4, AC0
MOVD   VD1020, LD26
+D     AC0, LD26
CITIM  *LD26, LD30
Network 10 
// 如果设备状态不正常，则检查此设备的上次读取时间，两次读取的时间间隔大于5秒则读取，否则跳过这个变量。
LD     SM0.0
AD>    LD30, 5000
JMP    210
Network 11 
LBL    212
Network 12 
NEXT
Network 13 
// FOR循环完成，没有找到需要读取的变量
// 	返回num=0
LD     SM0.0
MOVW   0, LW0
JMP    255
Network 14 
// 设备状态正常，跳转到此
// 	判断是否有写出请求，如果有，则执行写，否则执行读。
LBL    200
Network 15 
// 检查变量是否读取过,标志位为1表示读取过，否则没有读取过
// 没有读取过的变量，必须进行一次读取
LD     SM0.0
MOVD   LD18, LD56
+D     +12, LD56
MOVB   *LD56, AC0
ANDB   1, AC0
AB=    AC0, 0
JMP    202
Network 16 
// 变量已经读取过，判断其是否需要写
// 
// 获取变量的寄存器个数
LD     SM0.0
MOVD   LD18, AC1
+D     +5, AC1
MOVW   *AC1, LW46
Network 17 
// 获取数据存储地址
LD     SM0.0
MOVD   LD18, AC2
+D     +7, AC2
MOVD   *AC2, LD48
MOVD   0, AC0
MOVW   *AC1, AC0
MOVD   LD48, AC1
+D     AC0, AC1
MOVD   AC0, LD52
+D     AC1, LD52
Network 18 
Network 19 
LD     SM0.0
FOR    LW40, 1, LW46
Network 20 
LD     SM0.0
AW<>   *LD48, *LD52
JMP    201
Network 21 
NEXT
Network 22 
// 没要变量需要写，则执行读取，返回值1
// 变量未读取过，则执行读取，返回值1
LBL    202
Network 23 
LD     SM0.0
MOVW   1, LW0
BMB    *LD18, *VD1012, 20
JMP    255
Network 24 
// 有变量需要写，返回值3
LBL    201
Network 25 
LD     SM0.0
MOVW   3, LW0
BMB    *LD18, *VD1012, 20
JMP    255
Network 26 
// 有变量需要尝试读取，返回值2
LBL    210
Network 27 
LD     SM0.0
MOVW   2, LW0
BMB    *LD18, *VD1012, 20
JMP    255
Network 28 
// 绝对跳转，防止漏掉
LD     SM0.0
JMP    255
Network 29 
LBL    255
Network 30 
// 恢复AC寄存器
LD     SM0.0
MOVD   LD2, AC0
MOVD   LD6, AC1
MOVD   LD10, AC2
MOVD   LD14, AC3
END_SUBROUTINE_BLOCK
SUBROUTINE_BLOCK INIT_DEV_STATE:SBR7
TITLE=子程序注释
VAR
i:WORD;
pos:DWORD;
END_VAR
BEGIN
Network 1 
// 循环开始（按变量个数循环）
LD     SM0.0
FOR    LW0, 1, 22
Network 2 // 网络标题
// 网络注释
LD     SM0.0
CALL   SBR0, 1, LD2
Network 3 
NEXT
END_SUBROUTINE_BLOCK
SUBROUTINE_BLOCK UPDATE_TAG_INFO:SBR8
TITLE=子程序注释
VAR_INPUT
bit:BYTE;
value:BYTE;
idx:BYTE;
END_VAR
VAR
saveac0:DWORD;
saveac1:DWORD;
saveac2:DWORD;
saveac3:DWORD;
i:WORD;
startaddr:DWORD;
max_i:WORD;
bitinfo:DWORD;
END_VAR
BEGIN
Network 1 // 网络标题
// 保存AC寄存器
LD     SM0.0
MOVD   AC0, LD3
MOVD   AC1, LD7
MOVD   AC2, LD11
MOVD   AC3, LD15
Network 2 
LD     SM0.0
MOVW   0, LW19
Network 3 
// 循环开始（按变量个数循环）
LD     SM0.0
FOR    LW25, 1, 22
Network 4 
// 获取变量信息的首地址
LD     SM0.0
MOVD   0, AC0
MOVW   LW19, AC0
*D     +20, AC0
MOVD   VD1004, LD21
+D     AC0, LD21
Network 5 
// 站号不相等，则continue，继续下一次循环
LD     SM0.0
AB<>   *LD21, LB2
JMP    100
Network 6 // 网络标题
// 站号相等，则更新变量信息
LD     SM0.0
LPS
MOVD   LD21, LD27
+D     +12, LD27
AB=    LB1, 0
ANDB   16#FE, *LD27
LPP
AB=    LB1, 1
ORB    1, *LD27
Network 7 
LD     SM0.0
INCW   LW19
Network 8 
LBL    100
Network 9 
NEXT
Network 10 
LBL    255
Network 11 
// 恢复AC寄存器
LD     SM0.0
MOVD   LD3, AC0
MOVD   LD7, AC1
MOVD   LD11, AC2
MOVD   LD15, AC3
END_SUBROUTINE_BLOCK
SUBROUTINE_BLOCK HSC0_INIT:SBR9
TITLE=
BEGIN
Network 1 // HSC 指令向导
// 要在程序中使用此配置，请在主程序块中使用 SM0.1 或一条沿触发指令调用一次此子程序。
// 配置 HC0 为模式 0；CV = 0； PV = 0；增计数；
// 开放中断和启动计数器。
// 
LD     SM0.0
MOVB   16#F8, SMB37                //设置控制位：增计数；已使能；
MOVD   +0, SMD38                   //装载 CV
MOVD   +0, SMD42                   //装载 PV
HDEF   0, 0
ENI
HSC    0
END_SUBROUTINE_BLOCK
INTERRUPT_BLOCK INT_0:INT0
TITLE=中断程序注释
BEGIN
Network 1 // 网络标题
// 网络注释
END_INTERRUPT_BLOCK
INTERRUPT_BLOCK MBUSM2:INT1
TITLE=本代码归西门子能源与自动化公司专有，它属于附加软件包“Modbus 主站端口 0 库”的一部分。
BEGIN
Network 1 // 此 POU 受密码保护，不能编辑和查看。

END_INTERRUPT_BLOCK
